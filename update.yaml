####
## remove ryum remove libvirt* -y

---

- hosts: all
  user: charles.a
  connection: ssh
  become_user: root
  become: true
  become_method: sudo
  gather_facts: true
  #connection: paramiko

  vars:

  pre_tasks:

  - name: 'install sudo'
    raw: apt-get -y install sudo
    ignore_errors: yes

  - name: 'install python2'
    raw: sudo apt-get -y install python-simplejson
    ignore_errors: yes

  - name: Bootstrap with python
    raw: which python || (sudo apt update; sudo apt install -y python; sudo yum install -y python)
    ignore_errors: yes

  - name: Installs python-simplejson in RAW mode
    raw: apt-get -y install python-simplejson
    ignore_errors: yes

  - name: Instalando EPEL
    raw:  sudo yum install -y epel-release
    ignore_errors: yes

  - name: Instalando Ansible # Modo nao bonito
    raw: sudo yum install -y ansible
    ignore_errors: yes

  - name: Instalando phyton ansible CentOS 8 e RHEL 8
    raw:  sudo dnf install python3 python3-pip -y
    ignore_errors: yes

  - name: Instalando phyton ansible CentOS 8 e RHEL 8
    raw:  sudo yum install python3 python3-pip -y
    ignore_errors: yes

  - name: Criando um link simbolico, phyton3 para phyton
    raw: sudo ln -s /usr/bin/python3 /usr/bin/python
    ignore_errors: yes

  - name: Limpando Centos 8
    raw:  sudo dnf clean all && sudo rm -r /var/cache/dnf  && sudo dnf upgrade -y && sudo dnf update -y & echo hostname
    ignore_errors: yes


  - name: Gathering Facts
    setup:

  tasks:

  - name: Instalando atualizacoes SO - Centos
    yum: name=* state=latest update_cache=yes 
    when: (ansible_distribution == "CentOS") or
           ansible_distribution == "Red Hat Enterprise Linux" or
           ansible_distribution == "OracleLinux"
    tags: atualizar

  - name: Instalando atualizacoes SO - Debian
    apt: upgrade=dist update_cache=yes
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    tags: atualizar

  - name: Yum install Ansible RH 7
    yum: name=ansible,python-pip,python-jinja2,sshpass,openssh-clients,wget update_cache=yes
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 7 and ansible_distribution != "Fedora"
    ignore_errors: yes
    tags: instalar

  - name: Yum install requirements RH5
    yum: name=python26,python26-simplejson,python26-distribute,gcc,python26-devel,openssh-clients,sshpass,libffi-devel,openssl-devel
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int < 6
    ignore_errors: yes
    tags: instalar

  - name: Ubuntu install requirements
    apt: name=software-properties-common
    when: ansible_distribution == "Ubuntu"
    tags: instalar

  - name: Ubuntu install Ansible PPA repo
    apt_repository: repo='ppa:ansible/ansible'
    when: ansible_distribution == "Ubuntu"
    tags: instalar

  - name: Ubuntu install Ansible with apt
    apt: name=ansible,python-pip,python-jinja2,sshpass,openssh-client,unzip
    when: ansible_distribution == "Ubuntu"
    tags: instalar

  - name: Instalando pacotes do Centos/RedHat/OracleLinux
    when: (ansible_distribution == 'Red Hat Enterprise Linux') or
          (ansible_distribution == 'RedHat') or
          (ansible_distribution == 'CentOS') or
          (ansible_distribution == 'OracleLinux')
    action: "{{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes"
    with_items:
#     - libselinux-python
     - net-tools
     - vim-common
     - ntpstat
     - openssl-devel
     - perl-IO-Socket-SSL
     - yum-utils
     - bind-utils
     - perl-CPAN
    tags: instalar

  - name: Instalando pacotes do Debian
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    action: "{{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes"
    with_items:
     - sharutils
     - vim
     - ntpdate
     - net-tools
    tags: instalar


  - name: Instando pacotes CentOS ou RedHat menores que 7
    when: ((ansible_os_family == "RedHat" or ansible_distribution == 'CentOS')  and (ansible_distribution_major_version > 8 or ansible_distribution_version > 8))
    action: "{{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes"
    with_items:
     - rcs 
     - libselinux-python
    tags: instalar

  - name: Instalado Pacotes
    action: "{{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes"
    with_items:
     - mlocate
     - sudo
     - wget
     - curl
     - sysstat
     - wget
     - open-vm-tools
     - screen
    tags: instalar
