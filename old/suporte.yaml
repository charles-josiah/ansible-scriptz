---
- hosts: SRV-ANTISPAM01
  user: charles.a
  connection: ssh
  become_user: root 
  become: yes
  become_method: sudo
  connection: paramiko
  gather_facts: yes

  vars:
    novos_usuarios:
      - charles.a
      - gustavo.h
      - geraldo.m

    remove_usuarios:
      - yuri
      - luiz.carlos
      - davi
      - wagner.fernanades
      - wagner.f

    remove_user_sudo:
      - yuri
      - luiz.carlos 
      - davi 
      - wagner.fernanades
      - wagner.f

    ssh_chaves:
      - charles.a
      - gustavo.h
      - geraldo.m

    desliga_servicos:
      - postfix
      - firewalld

    sshd_config: /etc/ssh/sshd_config
    chave_dir_ori: /Users/charles.a/Acessos/Ansible/chaves
    chave_dir_dst: /etc/ssh/chaves 
    ansible_sudo_flags: '-H'
    pwd_alias: "{{ lookup('password', '/dev/null length=17 chars=ascii_letters') }}"

  tasks:

  - set_fact:
        my_pass: "{{ pwd_alias }}"

  - name: Desliga SELinux
    selinux:  state=disabled
    when: ansible_distribution == "CentOS"

  - name: Desliga Servicos 
    service:
      name={{ item }}
      state=stopped
      enabled=no
    with_items: "{{ desliga_servicos }}"
    ignore_errors: yes 


  - name: Adcionar Usuarios padrao  
    user: 
     name={{ item }}
     state=present
     password= "{{ "{{pwd_alias}}" | password_hash('sha512') }}"
     shell=/bin/bash
     update_password=on_create
    with_items: "{{ novos_usuarios }}"
    tags: adiciona_usuario_padrao 

  - name: Removendo usuarios
    user:
     name={{ item }}
     state= state=absent
    with_items: "{{ remove_usuarios }}"
    tags: remove_usuario

  - name: Removendo chave do usuario
    file: 
       path: '{{ chave_dir_dst }}/{{ item }}.pub' 
       state: absent
    with_items: "{{ remove_usuarios }}"
    tags: remove_usuario 

  - name: Adicionado grupo 'wheel' 
    group:
      name: wheel
      state: present
    tags: adiciona_wheel

  - name: Adiciona usuarios para grupo wheel  
    user:
      name: "{{ item }}"
      groups: wheel
      append: yes
    with_items: "{{ novos_usuarios }}"
    tags: adiciona_user_whell

  - name: Adiciona grupo 'wheel' para sem senha
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%wheel'
      line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    tags: adiciona_wheel_sudo

  - name: Remove linhas adicionais do sudores 
    lineinfile:
      backup=yes
      dest=/etc/sudoers
      regexp='^{{ item }}'
      state=absent
    with_items: "{{ remove_user_sudo }}"
    tags: remove_sudores

  - name: Diretorio Chaves
    action: file path={{ chave_dir_dst }} state=directory
      owner=0 group=0 mode=0755
    tags: adiciona_chaves

  - name: Copiando as chaves
    action: copy src={{ chave_dir_ori }}/{{ item }}.pub
       dest={{ chave_dir_dst }} 
       owner=0 group=0 mode=644
    with_items: "{{ ssh_chaves }}"
    tags: adiciona_chaves


  - name: Remove configuracoes antigas
    lineinfile:
      backup=yes
      dest="{{ sshd_config }}"
      state=absent
      regexp="(?i)^{{ item }}"
    with_items:
        - AllowGroups
        - AllowUsers
        - DenyUsers
        - PermitRootLogin
        - X11Forwarding
        - AuthorizedKeysFile
        - MaxAuthTries
        - Ciphers
        - ClientAliveCountMax
    tags: configura_ssh




  - name: Modifca algumas linhas do ssh 
    lineinfile:
      dest="{{ sshd_config }}"
      regexp="{{ item.regexp }}"
      line="{{ item.line }}"
    with_items:
        - { regexp: '(?i)^.PermitRootLogin', line: 'PermitRootLogin no' }
        - { regexp: '(?i)^.AuthorizedKeysFile', line: 'AuthorizedKeysFile {{ chave_dir_dst }}/%u.pub ' }
        - { regexp: '(?i)^.X11Forwarding', line: 'X11Forwarding no' }
        - { regexp: '(?i)^.MaxAuthTries', line: 'MaxAuthTries 4' }
        - { regexp: '(?i)^.PermitUserEnvironment', line: 'PermitUserEnvironment no' }
        - { regexp: '(?i)^.Ciphers', line: 'Ciphers aes128-ctr,aes192-ctr,aes256-ctr' }
        - { regexp: '(?i)^.ClientAliveCountMax', line: 'ClientAliveCountMax 0' }
    notify:
       - restart ssh
       - restart sshd
    tags: configura_ssh

  - name: Limpa AllowUsers e DenyUsers  antigos 
    lineinfile:
      dest="{{ sshd_config }}"
      state=absent
      regexp="(?i)^{{ item }}"
    with_items:
        - AllowGroups
        - AllowUsers
        - DenyUsers
    tags: configura_ssh

  - name: Permite grupo whell acesso ao sistema 
    lineinfile:
      dest="{{ sshd_config }}"  
      line="{{ item.line }}"
      insertafter="{{ item.insertafter }}"
    with_items:
          - { line: 'AllowGroups wheel', insertafter: EOF }
          - { line: 'DenyUsers ALL', insertafter: EOF }
    notify:
       - restart ssh
       - restart sshd
    tags: configura_ssh

  - name: Atualiza senhas
    user: 
      name={{ item }}
      state=present
      password="{{ "{{pwd_alias}}" | password_hash('sha512') }}"
      shell=/bin/bash
      update_password=always
    with_items: "{{ novos_usuarios }}"
    tags: atualiza_senha 

  handlers:
    - name: restart sshd
      service: name=sshd state=restarted
      when: (ansible_distribution == 'Red Hat Enterprise Linux') or
            (ansible_distribution == 'RedHat') or
            (ansible_distribution == 'CentOS') or
            (ansible_distribution == 'OracleLinux')

    - name: restart ssh
      service: name=ssh state=restarted
      when: (ansible_distribution == 'Debian') or (ansible_distribution == 'Ubuntu')


